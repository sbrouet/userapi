<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.3.1.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.sbr</groupId>
	<artifactId>userapi</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>userapi</name>
	<description>Demo project</description>

	<properties>
		<java.version>14</java.version>
		
		<json-patch.version>1.12</json-patch.version>
		<spring-cloud.version>Hoxton.SR6</spring-cloud.version>
		<org.mapstruct.version>1.4.0.Beta3</org.mapstruct.version>
		<org.projectlombok.version>1.18.12</org.projectlombok.version>
		<swagger.version>2.9.2</swagger.version>
		<org.testcontainers.mariadb.version>1.14.3</org.testcontainers.mariadb.version>
		<mariadb-java-client.version>2.6.2</mariadb-java-client.version>
		
		<!-- The main class to be run -->
        <start-class>com.sbr.userapi.UserApiApplication</start-class>
	</properties>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>
    
	<dependencies>
		<!-- Spring Boot starters -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency> 
		
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.junit.vintage</groupId>
					<artifactId>junit-vintage-engine</artifactId>
				</exclusion>
			</exclusions> 
		</dependency>
		 
		<!-- Database -->
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>runtime</scope>
		</dependency>
		
		<!-- Spring messaging with spring-cloud-stream -->
		<dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-stream</artifactId>
        </dependency>
		<dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-stream-test-support</artifactId>
            <scope>test</scope>
       	</dependency>
       	<!-- spring-cloud for Rabbit MQ -->
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-stream-binder-rabbit</artifactId>
		</dependency>

		<!-- Other 3rd party libraries -->
		
		<!--
			https://mapstruct.org/
			MapStruct is a code generator that greatly simplifies the implementation of mappings 
			between Java bean types based on a convention over configuration approach
		-->
		<dependency>
            <groupId>org.mapstruct</groupId>
            <artifactId>mapstruct</artifactId>
            <version>${org.mapstruct.version}</version>
        </dependency>
		
		<!--
			https://projectlombok.org/
			Never write another getter or equals method again, with one annotation your class has a fully featured builder, 
			Automate your logging variables, and much more. 
		-->
		<dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${org.projectlombok.version}</version>
        </dependency>
		
		<!-- https://mvnrepository.com/artifact/com.github.java-json-tools/json-patch -->
		<dependency>
			<groupId>com.github.java-json-tools</groupId>
			<artifactId>json-patch</artifactId>
			<version>${json-patch.version}</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.apache.commons/commons-lang3 -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
		</dependency>

		<!-- Swagger -->
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger2</artifactId>
			<version>${swagger.version}</version>
		</dependency>
		<dependency>
		    <groupId>io.springfox</groupId>
		    <artifactId>springfox-swagger-ui</artifactId>
		    <version>${swagger.version}</version>
		</dependency>
		
		<!--
			Additional test dependencies
		-->

		<!-- MariaDB test container (see https://www.testcontainers.org) -->
		<dependency>
		    <groupId>org.testcontainers</groupId>
		    <artifactId>mariadb</artifactId>
		    <version>${org.testcontainers.mariadb.version}</version>
		    <scope>test</scope>
		</dependency>
		<!-- MariaDb JDBC Driver --> 
		<!-- https://mvnrepository.com/artifact/org.mariadb.jdbc/mariadb-java-client -->
		<dependency>
		    <groupId>org.mariadb.jdbc</groupId>
		    <artifactId>mariadb-java-client</artifactId>
		    <version>${mariadb-java-client.version}</version>
		    <scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>${maven.compiler.source}</source>
					<target>${maven.compiler.target}</target>
					<!--
						Enable annotation processors for libraries MapStruct and Lombok
						so updated classes can be generated at compile time
					-->
					<annotationProcessorPaths>
						<path>
							<groupId>org.mapstruct</groupId>
							<artifactId>mapstruct-processor</artifactId>
							<version>${org.mapstruct.version}</version>
						</path>
						<path>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
							<version>${org.projectlombok.version}</version>
						</path>
					</annotationProcessorPaths>
				</configuration>
			</plugin>
			<!-- Enable integration tests run by maven failsafe plugin (pre-configured in pluginManagement of parent pom) -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
			</plugin>
		</plugins>
	</build>

</project>
